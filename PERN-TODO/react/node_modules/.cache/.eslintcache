[{"/Users/jamest/Desktop/Portfolio-Projects/PERN-todo/client/src/index.js":"1","/Users/jamest/Desktop/Portfolio-Projects/PERN-todo/client/src/App.js":"2","/Users/jamest/Desktop/Portfolio-Projects/PERN-todo/client/src/components/ListTodos.js":"3","/Users/jamest/Desktop/Portfolio-Projects/PERN-todo/client/src/components/InputTodo.js":"4","/Users/jamest/Desktop/Portfolio-Projects/PERN-todo/client/src/components/EditTodo.js":"5"},{"size":222,"mtime":1615650835841,"results":"6","hashOfConfig":"7"},{"size":332,"mtime":1615817379080,"results":"8","hashOfConfig":"7"},{"size":1859,"mtime":1616007458328,"results":"9","hashOfConfig":"7"},{"size":1022,"mtime":1615816469765,"results":"10","hashOfConfig":"7"},{"size":1873,"mtime":1616038435019,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c1amcg",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/jamest/Desktop/Portfolio-Projects/PERN-todo/client/src/index.js",[],"/Users/jamest/Desktop/Portfolio-Projects/PERN-todo/client/src/App.js",[],"/Users/jamest/Desktop/Portfolio-Projects/PERN-todo/client/src/components/ListTodos.js",["25"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport EditTodo from \"./EditTodo\";\n\n\nconst ListTodos = () => {\n    \n    const [todos, setTodos] = useState([]);\n\n    // delete function\n\n    const deleteTodo = async id => {\n        try {\n          const deleteTodo = await fetch(`http://localhost:5000/todos/${id}` ,{\n              method: \"DELETE\"\n          });\n\n          setTodos(todos.filter(todo => todo.id !== id));\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n\n    const getTodos = async () => {\n        try {\n            const response = await fetch(\"http://localhost:5000/todos\");\n            const jsonData = await response.json();\n            \n            setTodos(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    useEffect(() => {\n      getTodos();  \n    }, []);\n    \n    return (\n        <Fragment>\n            <table class=\"table table-bordered mt-5 text-center\">\n            <thead>\n                <tr>\n                    <th>Description</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {/* <tr>\n                    <td>John</td>\n                    <td>Doe</td>\n                    <td>john@example.com</td>\n                </tr> */}\n                {todos.map(todo => (\n                    <tr key={todo.id}>\n                        <td>{todo.description}</td>\n                        <td><EditTodo todo ={todo} /></td>\n                        <td>\n                            <button className=\"btn btn-danger\" onClick={() => deleteTodo(todo.id)}>Delete</button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n            </table>    \n        </Fragment>\n    )\n};\n\nexport default ListTodos;","/Users/jamest/Desktop/Portfolio-Projects/PERN-todo/client/src/components/InputTodo.js",["26"],"import React, { Fragment, useState } from \"react\";\n\nconst InputTodo = () => {\n    \n    const [description, setDescription] = useState(\"\")\n    \n    const onSubmitForm = async e => {\n        e.preventDefault();\n        try {\n            const body = { description };\n            const response = await fetch(\"http://localhost:5000/todos\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n            });\n\n          window.location = \"/\";  \n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    return (\n       <Fragment>\n        <h1 className=\"text-center mt-5\">To-do List</h1>\n        <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\n            <input type=\"text\" className=\"form-control\" value = {description} onChange={e => setDescription(e.target.value)} />\n            <button className=\"btn btn-success\">Add</button>\n        </form>\n       </Fragment> \n    )\n}\n\nexport default InputTodo;","/Users/jamest/Desktop/Portfolio-Projects/PERN-todo/client/src/components/EditTodo.js",["27"],"import React, { Fragment, useState } from \"react\";\n\nconst EditTodo = ({ todo }) => {\n    const [description, setDescription] = useState(todo.description)\n    \n    // edit description\n\n    const updateDescription = async (e) => {\n        e.preventDefault();\n        try {\n          const body = {description};\n          const response = await fetch(`http://localhost:5000/todos/${todo.id}`, \n          {\n              method: \"PUT\",\n              headers: {\"Content-Type\": \"application/json\"},\n              body: JSON.stringify(body)\n          })\n          window.location = \"/\";\n        } catch (err) {\n            console.error(err.message)\n        }\n    }\n    \n    return (\n        <Fragment>\n            <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target={`#id${todo.id}`}>\n                Edit\n            </button>\n\n        <div class=\"modal fade \" id={`id${todo.id}`} onClick={() => setDescription(todo.description)}>\n        <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n\n        <div class=\"modal-header\">\n            <h4 class=\"modal-title\">Edit To-Do</h4>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n            onClick={() => setDescription(todo.description)}\n            >&times;</button>\n        </div>\n\n        <div class=\"modal-body\">\n            <input type=\"text\" className=\"form-control\" value={description} onChange={e => setDescription(e.target.value)} />\n        </div>\n\n        <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-info\" data-dismiss=\"modal\" onClick={e => updateDescription(e)}>Edit</button>\n            <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" onClick={() => setDescription(todo.description)}>Close</button>\n        </div>\n\n        </div>\n        </div>\n    </div>\n        </Fragment>\n    )\n};\n\nexport default EditTodo;",{"ruleId":"28","severity":1,"message":"29","line":13,"column":17,"nodeType":"30","messageId":"31","endLine":13,"endColumn":27},{"ruleId":"28","severity":1,"message":"32","line":11,"column":19,"nodeType":"30","messageId":"31","endLine":11,"endColumn":27},{"ruleId":"28","severity":1,"message":"32","line":12,"column":17,"nodeType":"30","messageId":"31","endLine":12,"endColumn":25},"no-unused-vars","'deleteTodo' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used."]