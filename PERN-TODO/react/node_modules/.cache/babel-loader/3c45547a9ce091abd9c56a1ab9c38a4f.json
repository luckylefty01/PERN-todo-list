{"ast":null,"code":"var _jsxFileName = \"/Users/jamest/Desktop/Projects-for-Portfolio/PERN_todo/client/src/components/ListTodos.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTodos = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]); // delete function\n\n  const deleteTodo = async id => {\n    try {\n      const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n        method: \"DELETE\"\n      });\n      setTodos(todos.filter(todo => todo.id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getTodos = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/todos\");\n      const jsonData = await response.json();\n      setTodos(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table table-bordered mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deleteTodo(todo.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListTodos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = ListTodos;\nexport default ListTodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodos\");","map":{"version":3,"sources":["/Users/jamest/Desktop/Projects-for-Portfolio/PERN_todo/client/src/components/ListTodos.js"],"names":["React","Fragment","useEffect","useState","ListTodos","todos","setTodos","deleteTodo","id","fetch","method","filter","todo","err","console","error","message","getTodos","response","jsonData","json","map","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC,CAFoB,CAIpB;;AAEA,QAAMI,UAAU,GAAG,MAAOC,EAAP,IAAa;AAC5B,QAAI;AACF,YAAMD,UAAU,GAAG,MAAME,KAAK,CAAE,+BAA8BD,EAAG,EAAnC,EAAsC;AAChEE,QAAAA,MAAM,EAAC;AADyD,OAAtC,CAA9B;AAIAJ,MAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAWA,EAAhC,CAAD,CAAR;AACD,KAND,CAME,OAAOK,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ,GAVD;;AAYA,QAAMC,QAAQ,GAAG,YAAY;AACzB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAAC,6BAAD,CAA5B;AACA,YAAMU,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAvB;AAEAd,MAAAA,QAAQ,CAACa,QAAD,CAAR;AACH,KALD,CAKE,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACH;AACJ,GATD;;AAWAd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,QAAD;AAAA,2BACI;AAAO,MAAA,KAAK,EAAC,uCAAb;AAAA,8BACA;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAQA;AAAA,kBAMKZ,KAAK,CAACgB,GAAN,CAAUT,IAAI,iBACX;AAAA,kCACI;AAAA,sBAAKA,IAAI,CAACU;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAC,gBAAlB;AAAmC,cAAA,OAAO,EAAE,MAAKf,UAAU,CAACK,IAAI,CAACJ,EAAN,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAASI,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AANL;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA9DD;;GAAMJ,S;;KAAAA,S;AAgEN,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\n\nconst ListTodos = () => {\n    \n    const [todos, setTodos] = useState([]);\n\n    // delete function\n\n    const deleteTodo = async (id)=> {\n        try {\n          const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\n              method:\"DELETE\"\n          })\n\n          setTodos(todos.filter(todo => todo.id !==id));\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const getTodos = async () => {\n        try {\n            const response = await fetch(\"http://localhost:5000/todos\");\n            const jsonData = await response.json();\n            \n            setTodos(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    useEffect(() => {\n      getTodos();  \n    }, []);\n    \n    return (\n        <Fragment>\n            <table class=\"table table-bordered mt-5 text-center\">\n            <thead>\n                <tr>\n                    <th>Description</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {/* <tr>\n                    <td>John</td>\n                    <td>Doe</td>\n                    <td>john@example.com</td>\n                </tr> */}\n                {todos.map(todo => (\n                    <tr key={todo.id}>\n                        <td>{todo.description}</td>\n                        <td>Edit</td>\n                        <td>\n                            <button className=\"btn btn-danger\" onClick={()=> deleteTodo(todo.id)} >Delete</button>\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n            </table>    \n        </Fragment>\n    )\n};\n\nexport default ListTodos;"]},"metadata":{},"sourceType":"module"}